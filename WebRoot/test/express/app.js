// Generated by CoffeeScript 1.9.1

/*
  Created by Jonas on 3/19/2015.
 */

(function() {
  var app, commonError, express, extend, fs, mappings, staticRouter;

  express = require("express");

  fs = require("fs");

  extend = require("extend");

  app = express();

  app.set("views", process.cwd() + "/test/json");

  app.engine("json", function(filePath, options, callback) {
    return fs.readFile(filePath, function(err, content) {
      if (err) {
        return callback(new Error(err));
      }
      return callback(null, content);
    });
  });

  commonError = {
    'result': 'NG',
    'messageType': 1,
    'message': 'Some error',
    'formValidateList': [],
    'permissions': [],
    'resultInfo': {},
    'forward': '',
    'token': '2015020600000001'
  };

  mappings = {};

  (function(routes) {
    return routes.forEach(function(name) {
      var phyPath, routePath;
      routePath = "./routes/" + name;
      phyPath = __dirname + "\/routes\/" + name + ".js";
      return fs.exists(phyPath, function(isExists) {
        if (isExists) {
          return extend(mappings, require(routePath));
        } else {
          return console.log("未找到：" + routePath + "，物理路径：" + phyPath);
        }
      });
    });
  })(["core"]);

  app.post("*", function(req, res, next) {
    var url, view;
    url = req.url.replace(/\/?VoyageOne/, "");
    view = mappings[url];
    console.log(url + " -> " + view);
    if (view) {
      if (typeof view === "function") {
        return view(req, res, next);
      } else {
        return res.render(view + ".json");
      }
    } else {
      return res.json(commonError);
    }
  });

  staticRouter = express["static"](process.cwd());

  app.use(function(req, res, next) {
    req.url = req.url.replace(/\/?VoyageOne\//, "");
    return staticRouter(req, res, next);
  });

  app.listen(8089);

}).call(this);

//# sourceMappingURL=app.js.map
